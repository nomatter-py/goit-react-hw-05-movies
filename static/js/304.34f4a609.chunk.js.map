{"version":3,"file":"static/js/304.34f4a609.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/movie-api.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n\nexport const LinkStyled = styled(Link)`\n\n  text-decoration: none;\n  color: inherit;\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n`;\n\n\n\n","import { LinkStyled } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </LinkStyled>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const MainHeader = styled('h1')`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;","import { MainHeader } from './Home.styled';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport * as API from 'services/movie-api';\n\nconst Home = () => {\n  const location = useLocation();\n  const [trendingList, setTrendingList] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const data = await API.getTrending();\n        const { results } = data;\n        const properStructData = results.map(({ id, title }) => ({\n          id,\n          title,\n        }));\n        setTrendingList([...properStructData]);\n      } catch (e) {\n        setError(true);\n        console.log(e);\n      }\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  if (!trendingList) {\n    return;\n  }\n\n  if (error) {\n    return <div>error</div>;\n  }\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <MainHeader>Trending today</MainHeader>\n      <MovieList movies={trendingList} location={location} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = '2eedd5583908f09c336fb6c1916fc5f0';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport let pathParams = \"/trending/movie/day\";\n\n export const params = {\n\n };\n\nconst customAxios = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: KEY,\n  },\n});\n\nexport const getTrending = async () => {\n  try {\n    const response = await customAxios.get(\"/trending/movie/day\", {\n      params,\n    });\n\n    const data = await response.data\n    return data\n    //return response.data;\n  } catch (error) {\n    throw new Error(`Smth went wrong ${error}`);\n  }\n};\n\nexport const getMovieDetails = async (id) => {\n  try {\n    const response = await customAxios.get(`/movie/${id}`, {\n      params,\n    });\n\n    const data = await response.data\n    return data\n    //return response.data;\n  } catch (error) {\n    throw new Error(`Smth went wrong ${error}`);\n  }\n};\n\nexport const getMovieCredits = async (id) => {\n  try {\n    const response = await customAxios.get(`/movie/${id}/credits`, {\n      params,\n    });\n\n    const data = await response.data\n    return data\n  } catch (error) {\n    throw new Error(`Smth went wrong ${error}`);\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n    const response = await customAxios.get(`/movie/${id}/reviews`, {\n      params,\n    });\n\n    const data = await response.data\n    return data\n  } catch (error) {\n    throw new Error(`Smth went wrong ${error}`);\n  }\n};\n\n\nexport const serachMovies = async (query) => {\n  try {\n    params.query = query;\n    const response = await customAxios.get(`/search/movie`, {\n      params,\n    });\n\n    const data = await response.data\n    return data\n  } catch (error) {\n    throw new Error(`Smth went wrong ${error}`);\n  }\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["LinkStyled","styled","Link","MovieList","movies","location","map","id","title","to","state","from","MainHeader","p","theme","space","useLocation","useState","trendingList","setTrendingList","error","setError","isLoading","setIsLoading","useEffect","API","data","results","properStructData","console","log","fetchData","Loader","params","customAxios","axios","baseURL","api_key","getTrending","get","response","Error","getMovieDetails","getMovieCredits","getMovieReviews","serachMovies","query","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}